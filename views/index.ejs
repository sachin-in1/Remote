<!DOCTYPE html>
<html lang="en">
<head>
    <% include ./partials/head %>

    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>


</head>
<body class="container">

<header>
    <% include ./partials/header %>
</header>

<main>
    <div class="jumbotron">
        <!-- <h1>This is great</h1> -->
        <h1></h1>
        <div id="player"  onclick=log()></div>
        <div class="container">
            <div class="row">
            </br>
              <div class="col-sm-1 glyphicon glyphicon-play-circle" style="max-width: fit-content;" onclick=play()>
               
              </div>
              <div class="col-sm-1 glyphicon glyphicon-pause" onclick=pause() >
              </div>
              <div class="col-sm-1 glyphicon glyphicon-stop" onclick=stopVideo() >
            </div>
              <div class="col-sm-9 " id="custom-seekbar">
                <span><div id="indiv"><span></span></div></span>
              </div>
              <!-- <textarea id="current-time"></textarea>
              <textarea id="duration"></textarea> -->
            </div>
          </div>

        

    </div>
</main>

<!--footer>
    < < % include ./partials/footer %> >
</footer -->

</body>
<script>
    
function log(){
    console.log("hi");
    
    console.log(player.getCurrentTime());
    
}



    function play(){
        player.playVideo();
        if (event.data == YT.PlayerState.PLAYING && !done) {
        setTimeout(stopVideo, 6000);
        done = true;
    }
        console.log("play me senpai");  
    }

    function pause(){
        player.pauseVideo(); 
        if (event.data == YT.PlayerState.PLAYING && !done) {
        setTimeout(stopVideo, 6000);
        done = true;
    }
        console.log("pause senpai");
    }

    // 2. This code loads the IFrame Player API code asynchronously.
    var tag = document.createElement('script');
    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    // 3. This function creates an <iframe> (and YouTube player)
    //    after the API code downloads.
    var player;
    function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
        'max-results' : 1,
        // height: '390',
        // height: 'relative',
        width: '100%',
        // listType: 'playlist',
        // list: '',
        // videoId: 'E_cTdhd88mk',
        
        

        events: {
        'onReady': onPlayerReady,
        },
        playerVars : {
        // 'autoplay': 1,
        listType: 'playlist',
        // listType: 'user_uploads',
        list: 'PLf4ff3CDBpnbFFYOiQqhO7kxZLD_8WNig',
        // list: 'UCaM-XmpUbe5aXOY9lvp6-Eg',
            // list: 'UCAGpAMprjGtyK4N0pSuVbaw',
            // channel_id:'UCAGpAMprjGtyK4N0pSuVbaw',
        index:1,
        'controls': 0,
        'enablejsapi': 1,
        'disablekb': 1,
        'modestbranding': 1,
        'rel': 0,
        // 'play':0
        // 'autohide': 1
        },
    });
    }


    var time_update_interval;


    function onPlayerReady() {
        // updateTimerDisplay();
        updateProgressBar();
        clearInterval(time_update_interval);
        console.log(player.getCurrentTime());        
    time_update_interval = setInterval(function () {
        // updateTimerDisplay();
        updateProgressBar();
    }, 1000)
    }

    var done = false;
    function stopVideo() {
    player.stopVideo();
    }


    // function updateTimerDisplay(){
//     console.log("dodo");
//     // Update current time text display.
//     $('#current-time').text(formatTime( player.getCurrentTime() ));
//     $('#duration').text(formatTime( player.getDuration() ));
//     console.log(player.getCurrentTime());
// }

function formatTime(time){
    console.log("time");
    time = Math.round(time);
    var minutes = Math.floor(time / 60),
    seconds = time - minutes * 60;
    seconds = seconds < 10 ? '0' + seconds : seconds;
    return minutes + ":" + seconds;
}




function updateProgressBar(){
  var percentage = ( player.getCurrentTime() / player.getDuration() ) * 100;
  $("#custom-seekbar span").css("width", percentage+"%");
  $("#indiv span").css("width", player.getVideoLoadedFraction()*100+"%");
}

$("#custom-seekbar").on("click", function(e){
    console.log(player.getCurrentTime());
    var offset = $(this).offset();
    var left = (e.pageX - offset.left);
    var totalWidth = $("#custom-seekbar").width();
    var percentage = ( left / totalWidth );
    var vidTime = player.getDuration() * percentage;
    console.log(vidTime);
    player.seekTo(vidTime);

});//click()



$('.iv-card').on('hover', function () {
    console.log("thumb");
    

var url = $(this).attr('iv-click-target');

player.cueVideoById(url);

});

$('.thumbnail').on('hover', function () {
    console.log("thumb");
    

var url = $(this).attr('data-video-id');

player.cueVideoById(url);

});

//Seekbar
</script>
</html>